# Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

#
# Using this configuration file, you can configure the DAML-on-Fabric connector for multiple HL Fabric local and external networks.
#
# Instructions:
# 1. This configuration file assumes that you understand Hyperledger Fabric structure and concepts.
# 2. If you are going to connect this system to an existing HL Fabric network, please download the necessary certificates:
#    2.1. Organization TLS certificate
#    2.2. Fabric Client key file
#    2.3. Fabric Client Certificate
# 3. For using the connector in your laptop, we recommend using the pre-existing configuration.
# 4. The attributes "name" and "mspID" included in this file are case sensitive, so make sure that they are equal to your network configuration.
# 5. This file supports access to multiple organizations to configure a local network. However, in a real-world scenario, your connector should access to a single organization of a network.
#
# Global attributes description:
# organizations: encapsulates the data about the components that compose each organization of the network.
#   name: name of the organization.
#   mspId: Id of organization in the Membership Service Provider.
#   adminMsp: base folder where the certificates of the client user are stored.
#   hlfTlsCertFile: TLS certificate of the organization. It is used to communicate with peers and orderers through the client SDK.
#   hlfClientUser: Fabric client user.
#   hlfClientKeyFile: Fabric client key file.
#   hlfClientCertFile: Fabric client certificate file.
#   hlfClientAuth (true|false): Fabric client requires authentication (set to true).
#   peers: list of peers of the organization.
#     name: name of the peer
#     url: core peer address
#   orderers: list of orderers of the organization.
#     name: name of orderer
#     url: orderer address
# channel: configuration of the channel where the DAML-on-Fabric chaincode is going to run. A channel is a communication link between multiple organizations. It has a common ledger available to all participants through their peers.
#   name: name of the channel
#   channelTxFile: channel configuration file. It will help if you use it when you want the connector to configure your local instance. When connecting to an existing network, this attribute should be empty.
#   endorsementPolicy: endorsement policy of the channel. It will help if you use it when you want the connector to configure your local instance. When connecting to an existing network, this attribute should be empty.
#   chaincode: information about chaincode
#     name: name of chaincode.
#     type (golang|java|nodejs): the programming language used in the chaincode. Right now, this connector only supports the default chaincode built-in golang.
#     version: version of the chaincode.
#     gopath: location of the chaincode folder shared in this project.  When connecting to an existing network, this attribute should be empty.
#     metapath: location of the META-INF file of the chaincode.  When connecting to an existing network, this attribute should be empty.
#     entryPath: location of entry path of the chaincode.
#     queryWaitTime: time that the Fabric SDK will wait for a query in the chaincode.
#     invokeWaitTime: time that the Fabric SDK will wait for invoking a chaincode function.
# explorer: port where the custom fabric explorer will run (it provides information about transactions and blocks)
#   port: port where the explorer will run.
# ledgerId: id used by DAML ledger API to synchronize with the network ledger.
#

organizations:
  - name: org1.example.com
    mspId: Org1MSP
    adminMsp: src/test/fixture/tmp/data/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
    hlfTlsCertFile: src/test/fixture/tmp/data/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tls/ca.crt
    hlfClientUser: Admin
    hlfClientKeyFile: src/test/fixture/tmp/data/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tls/client.key
    hlfClientCertFile: src/test/fixture/tmp/data/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tls/client.crt
    hlfClientAuth: false
    peers:
      - name: peer0
        url: grpcs://localhost:10051
    orderers:
  - name: org2.example.com
    mspId: Org2MSP
    adminMsp: src/test/fixture/tmp/data/crypto-config/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp
    hlfTlsCertFile: src/test/fixture/tmp/data/crypto-config/peerOrganizations/org2.example.com/users/Admin@org2.example.com/tls/ca.crt
    hlfClientUser: Admin
    hlfClientKeyFile: src/test/fixture/tmp/data/crypto-config/peerOrganizations/org2.example.com/users/Admin@org2.example.com/tls/client.key
    hlfClientCertFile: src/test/fixture/tmp/data/crypto-config/peerOrganizations/org2.example.com/users/Admin@org2.example.com/tls/client.crt
    hlfClientAuth: false
    peers:
      - name: peer0
        url: grpcs://localhost:10056
    orderers:
  - name: example.com
    mspId: OrdererMSP
    adminMsp: src/test/fixture/tmp/data/crypto-config/ordererOrganizations/example.com/users/Admin@example.com/msp
    hlfTlsCertFile: src/test/fixture/tmp/data/crypto-config/ordererOrganizations/example.com/users/Admin@example.com/tls/ca.crt
    hlfClientUser: Admin
    hlfClientKeyFile: src/test/fixture/tmp/data/crypto-config/peerOrganizations/example.com/users/Admin@example.com/tls/client.key
    hlfClientCertFile: src/test/fixture/tmp/data/crypto-config/peerOrganizations/example.com/users/Admin@example.com/tls/client.crt
    hlfClientAuth: false
    peers:
    orderers:
      - name: orderer
        url: grpcs://localhost:10050
channel:
  name: mainchannel
  channelTxFile: src/test/fixture/tmp/data/mainchannel.tx
  endorsementPolicy: src/test/fixture/tmp/data/endorsement-policy.yaml
  chaincode:
    name: fabcar
    type: java
    version: 1.0
    gopath: chaincode
    metapath: chaincode/src/fabcar/META-INF
    entryPath: fabcar
    queryWaitTime: 90000
    invokeWaitTime: 120000
explorer:
  port: 8080
ledgerId: fabric-ledger
